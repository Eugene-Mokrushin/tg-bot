import time
import telebot
import config
import requests
import os
from telebot import types

bot = telebot.TeleBot(config.TOKEN)
Access = 'Not in'
Kate_key = 'pass'
Alex_key = 'pass'
test_key = 'pass'
current_folder = os.getcwd()
mixed = None
mixed_1 = None


@bot.message_handler(commands=['start'])
def welcome(message):
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–í–≤–µ—Å—Ç–∏ –∫–ª—é—á–∏")

    markup.add(item1)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - ü§ñ<b>{1.first_name}</b>ü§ñ\n–Ø –ø–æ–º–æ–≥–∞—é –∞–≤—Ç–æ–º–∞—Ç–µ–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è–ª –±—ã <b>–º–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å</b> –º–Ω–æ–≥–æ —á–∞—Å–æ–≤.\n\n–Ø - –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç, –∏ –Ω–µ –ª—é–±–ª—é –∫–æ–≥–¥–∞ –º–µ–Ω—è –ø–µ—Ä–µ–±–∏–≤–∞—é—Ç. –ï—Å–ª–∏ —è –ø–∏—à—É, —á—Ç–æ —è –≤ —Ä–∞–±–æ—Ç–µ - –Ω–µ –Ω—É–∂–Ω–æ –º–µ–Ω—è –æ—Ç–≤–ª–µ–∫–∞—Ç—å –Ω–æ–≤—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏üòâ".format(
                         message.from_user,
                         bot.get_me()),
                     parse_mode="html", reply_markup=markup)


@bot.message_handler(commands=['button'])
def options_ozon(message):
    if Access == 'In':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton("–û—Å—Ç–∞—Ç–∫–∏ OZON")
        item2 = types.KeyboardButton("–¶–µ–Ω—ã OZON")
        item3 = types.KeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å DB OZON IDs")
        item4 = types.KeyboardButton("–í—ã–π—Ç–∏")
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –¥–µ–ª–∞—Ç—å –¥–µ–ª—å—à–µ", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "Access denied")


def user_input(message):
    if message.text == Kate_key or message.text == Alex_key or message.text == test_key:
        global Access
        Access = 'In'
        bot.send_message(message.chat.id, '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω')
        options_ozon(message)

    elif message.text != Kate_key or message.text != Alex_key or message.text != test_key:
        bot.send_message(message.chat.id, '–ù–∞–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á')
    else:
        bot.send_message(message.chat.id, 'Error')


@bot.message_handler(content_types=['text'])
def general(message):
    global Access, mixed, mixed_1
    if message.chat.type == 'private' and Access != 'In':
        if message.text == '–í–≤–µ—Å—Ç–∏ –∫–ª—é—á–∏':
            msg = bot.send_message(message.chat.id, '–í–≤–æ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á')
            bot.register_next_step_handler(msg, user_input)
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ –∫–∞–∫ —Å–∞–º?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ /start')
    elif message.chat.type == 'private' and Access == 'In':
        if message.text == '–í—ã–π—Ç–∏':
            Access = 'Not in'
            welcome(message)
        elif message.text == '–û—Å—Ç–∞—Ç–∫–∏ OZON':
            bot.send_message(message.chat.id,
                             "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n–ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –Ω–∞ –≤—Ä–µ–º—è - <b>30 —Å–µ–∫—É–Ω–¥</b>\n–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –°—Ç–æ–∫ - OZONüîÑ",
                             parse_mode='html')
            try:
                os.system(f'python {current_folder}/Parse_OZON.py')
                time.sleep(20)
            except requests.exceptions.MissingSchema:
                pass
            try:
                os.system(f'python {current_folder}/CSV_to_XLSX.py')
                time.sleep(4)
                os.system(f'python {current_folder}/Edit_parse_OZON_xlsx.py')
                time.sleep(4)
                bot.send_document(message.chat.id, open(rf'{current_folder}/Ozon_Data.xlsx', 'rb'))
                if os.path.exists(f'{current_folder}/Ozon_Data.csv'):
                    os.remove(f'{current_folder}/Ozon_Data.csv')
                    os.remove(f'{current_folder}/Ozon_Data.xlsx')
                else:
                    pass
            except FileNotFoundError:
                bot.send_message(message.chat.id,
                                 f'–û–ó–û–ù –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫–∞—á–∞–∏–≤–∞—Ç—å —Ñ–∞–π–ª —Ä–∞–∑ –≤ <b>5Ô∏è‚É£ –º–∏–Ω—É—Ç!</b>',
                                 parse_mode='html')

        elif message.text == '–¶–µ–Ω—ã OZON':
            bot.send_message(message.chat.id,
                             "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n–ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –Ω–∞ –≤—Ä–µ–º—è - <b>2 –º–∏–Ω—É—Ç—ã</b>\n–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –¶–µ–Ω - OZONüîÑ",
                             parse_mode='html')
            try:
                os.system(f'python {current_folder}/Parse_OZON_price.py')
            except requests.exceptions.MissingSchema:
                pass

            try:
                bot.send_document(message.chat.id, open(rf'{current_folder}/Ozon_Data_Price.xlsx', 'rb'))
                if os.path.exists(f'{current_folder}/Ozon_Data_Price.xlsx'):
                    os.remove(f'{current_folder}/Ozon_Data_Price.xlsx')
                else:
                    pass
            except FileNotFoundError:
                bot.send_message(message.chat.id,
                                 f'–û–ó–û–ù –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫–∞—á–∞–∏–≤–∞—Ç—å —Ñ–∞–π–ª —Ä–∞–∑ –≤ <b>5Ô∏è‚É£ –º–∏–Ω—É—Ç!</b>',
                                 parse_mode='html')

        elif message.text == '–û–±–Ω–æ–≤–∏—Ç—å DB OZON IDs':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data='continue')
            item2 = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∏—Ç—å", callback_data='stop')
            markup.add(item1, item2)
            bot.send_message(message.chat.id,
                             '–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω—É–∂–Ω–∞ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç–∏ SKU –¥–ª—è <i>–æ—Ç—á–µ—Ç–∞ –ø–æ —Ü–µ–Ω–∞–º</i>. –ï—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å —Ü–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ <b>"–û—Ç–º–µ–Ω–∞"</b>',
                             reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def send_sad_capybara(message):
    sti = open('AnimatedSticker.tgs', 'rb')
    bot.send_sticker(message.chat.id, sti)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'continue':
                bot.send_message(call.message.chat.id,
                                 '‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n–ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –Ω–∞ –≤—Ä–µ–º—è - <b>1,5 –º–∏–Ω—É—Ç—ã</b>\n–ò–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –°–ø–∏—Å–æ–∫ SKU - OZONüîÑ',
                                 parse_mode='html')
                os.system(f'python {current_folder}/Update_DB_ids.py')
                bot.send_message(call.message.chat.id, '<b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</b> ‚úÖ', parse_mode='html')
            elif call.data == 'stop':
                bot.send_message(call.message.chat.id, '<b>–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ</b> ‚ùå', parse_mode='html')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–•–æ—Ä–æ—à–æ",
                                  reply_markup=None)

            # show alert
            # bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            #                           text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
